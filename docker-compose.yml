services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - mongodb
  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
    networks:
      - mongodb
    command: sh -c "((sleep 15 && kafka-topics --bootstrap-server localhost:29092 --create --if-not-exists --topic accounts && kafka-topics --bootstrap-server localhost:29092 --create --if-not-exists --topic posts)&) && /etc/confluent/docker/run"
  apiservice1:
    container_name: api1
    build: ./ApiService
    ports:
    - '421:6969'
    networks:
      - mongodb
    environment:
      - ACCOUNTS_TOPIC=accounts
      - POSTS_TOPIC=posts
      - KAFKA_BROKER_SERVER=broker:29092
    depends_on:
      - broker
  apiservice2:
    container_name: api2
    build: ./ApiService
    ports:
    - '422:6969'
    depends_on:
      - apiservice1
    networks:
      - mongodb
    environment:
      - ACCOUNTS_TOPIC=accounts
      - POSTS_TOPIC=posts
      - KAFKA_BROKER_SERVER=broker:29092
  nginx:
    container_name: nginx
    build: './nginx'  
    ports:
    - '420:80'
    depends_on:
      - apiservice1
      - apiservice2
    networks:
      - mongodb
  mongodb:
    image: mongo:latest
    container_name: distributedmongodbfinal
    ports: 
    - '2717:27017'
    networks:
    - mongodb
  apipersistence:
    build: './ApiPersistence'
    depends_on:
      - apiservice1
      - broker
      - zookeeper
    environment:
      - ACCOUNTS_TOPIC=accounts
      - POSTS_TOPIC=posts
      - KAFKA_BROKER_SERVER=broker:29092
    networks:
      - mongodb
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - '9090:9090'
    depends_on:
      - apipersistence
      - apiservice1
      - apiservice2
      - broker
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    networks:
      - mongodb

volumes:
  prometheus-data: 


networks:
  mongodb: 
    name: "mongodb"
